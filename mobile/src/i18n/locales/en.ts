export default {
  // Common
  common: {
    loading: 'Loading...',
    error: 'An error occurred',
    success: 'Operation successful',
    retry: 'Retry',
    cancel: 'Cancel',
    confirm: 'Confirm',
    save: 'Save',
    delete: 'Delete',
    edit: 'Edit',
    create: 'Create',
    refresh: 'Refresh',
    back: 'Back',
    settings: 'Settings',
    search: 'Search',
    notFound: 'No results found',
  },
  
  // Authentication
  auth: {
    login: 'Login',
    register: 'Register',
    logout: 'Logout',
    username: 'Username',
    password: 'Password',
    confirmPassword: 'Confirm Password',
    email: 'Email',
    forgotPassword: 'Forgot Password',
    loginSuccess: 'Login successful',
    registerSuccess: 'Registration successful',
    invalidCredentials: 'Invalid username or password',
    usernameRequired: 'Username is required',
    passwordRequired: 'Password is required',
    passwordsDoNotMatch: 'Passwords do not match',
    emailInvalid: 'Invalid email format',
  },
  
  // Navigation
  navigation: {
    home: 'Home',
    dashboard: 'Dashboard',
    monitors: 'Monitors',
    agents: 'Agents',
    status: 'Status Page',
    notifications: 'Notifications',
    settings: 'Settings',
    profile: 'Profile',
  },
  
  // Monitors
  monitors: {
    title: 'Monitor Management',
    addMonitor: 'Add Monitor',
    editMonitor: 'Edit Monitor',
    deleteMonitor: 'Delete Monitor',
    deleteConfirm: 'Are you sure you want to delete this monitor?',
    createSuccess: 'Monitor created successfully',
    updateSuccess: 'Monitor updated successfully',
    deleteSuccess: 'Monitor deleted successfully',
    name: 'Name',
    url: 'URL',
    method: 'Method',
    interval: 'Interval',
    timeout: 'Timeout',
    expectedStatus: 'Expected Status',
    headers: 'Headers',
    body: 'Body',
    status: 'Status',
    uptime: 'Uptime',
    responseTime: 'Response Time',
    lastChecked: 'Last Checked',
    active: 'Active',
    history: 'History',
    checks: 'Checks',
    check: 'Check Now',
    nameRequired: 'Name is required',
    urlRequired: 'URL is required',
    urlInvalid: 'Invalid URL format',
    intervalInvalid: 'Invalid interval',
    timeoutInvalid: 'Invalid timeout',
    seconds: 'seconds',
    minutes: 'minutes',
    status_up: 'Up',
    status_down: 'Down',
    status_pending: 'Pending',
    statusHistory: 'Status History',
    selectStatusCode: 'Select Status Code',
    enterName: 'Enter monitor name',
    enterUrl: 'Enter URL or host to monitor',
    headerName: 'Name',
    headerValue: 'Value',
    addHeader: 'Add Header',
    bodyPlaceholder: 'Enter request body content, e.g. JSON data',
    create: 'Create Monitor',
    createError: 'Creation Error',
    fieldsRequired: 'Please fill in all required fields',
    createFailed: 'Failed to create monitor',
    // Status code descriptions
    statusCodes: {
      ok: 'OK',
      created: 'Created',
      noContent: 'No Content',
      successful: 'Successful',
      movedPermanently: 'Moved Permanently',
      found: 'Found',
      redirection: 'Redirection',
      badRequest: 'Bad Request',
      unauthorized: 'Unauthorized',
      forbidden: 'Forbidden',
      notFound: 'Not Found',
      clientError: 'Client Error',
      serverError: 'Internal Server Error',
      badGateway: 'Bad Gateway',
      serviceUnavailable: 'Service Unavailable',
      gatewayTimeout: 'Gateway Timeout',
      serverErrors: 'Server Error'
    },
  },
  
  // Agents
  agents: {
    title: 'Agent Management',
    addAgent: 'Add Agent',
    editAgent: 'Edit Agent',
    deleteAgent: 'Delete Agent',
    deleteConfirm: 'Are you sure you want to delete this agent?',
    createSuccess: 'Agent created successfully',
    updateSuccess: 'Agent updated successfully',
    deleteSuccess: 'Agent deleted successfully',
    name: 'Name',
    status: 'Status',
    token: 'Token',
    generateToken: 'Generate Token',
    regenerateToken: 'Regenerate Token',
    copyToken: 'Copy Token',
    tokenCopied: 'Token copied',
    hostname: 'Hostname',
    ipAddress: 'IP Address',
    os: 'OS',
    version: 'Version',
    cpuUsage: 'CPU Usage',
    memoryUsage: 'Memory Usage',
    diskUsage: 'Disk Usage',
    networkRx: 'Network Receive',
    networkTx: 'Network Transmit',
    nameRequired: 'Name is required',
    status_active: 'Online',
    status_inactive: 'Offline',
    resourceUsage: 'Resource Usage',
  },
  
  // Status Page
  status: {
    title: 'Status Page',
    config: 'Status Page Configuration',
    saveConfig: 'Save Configuration',
    configSuccess: 'Configuration saved successfully',
    pageTitle: 'Page Title',
    description: 'Description',
    logoUrl: 'Logo URL',
    customCss: 'Custom CSS',
    selectMonitors: 'Select Monitors',
    selectAgents: 'Select Agents',
    overview: 'System Overview',
    incidents: 'Recent Incidents',
    systemStatus: 'System Status',
    allSystemsUp: 'All Systems Operational',
    partialSystemsDown: 'Partial System Outage',
    allSystemsDown: 'Major System Outage',
    lastUpdated: 'Last Updated',
  },
  
  // Notifications
  notifications: {
    title: 'Notification Management',
    settings: 'Notification Settings',
    channels: 'Notification Channels',
    templates: 'Notification Templates',
    history: 'Notification History',
    addChannel: 'Add Channel',
    editChannel: 'Edit Channel',
    deleteChannel: 'Delete Channel',
    channelName: 'Channel Name',
    channelType: 'Channel Type',
    channelConfig: 'Channel Configuration',
    enabled: 'Enabled',
    globalSettings: 'Global Settings',
    monitorSettings: 'Monitor Settings',
    agentSettings: 'Agent Settings',
    onDown: 'Notify On Down',
    onRecovery: 'Notify On Recovery',
    onOffline: 'Notify On Offline',
    thresholdSettings: 'Threshold Settings',
    cpuThreshold: 'CPU Threshold',
    memoryThreshold: 'Memory Threshold',
    diskThreshold: 'Disk Threshold',
    saveSettings: 'Save Settings',
    settingsSaved: 'Settings saved',
    test: 'Test',
    testSuccess: 'Test notification sent successfully',
    testFailed: 'Test notification failed',
    noNotifications: 'No notifications',
  },
  
  // Settings
  settings: {
    title: 'Application Settings',
    language: 'Language',
    theme: 'Theme',
    account: 'Account',
    notifications: 'Notifications',
    about: 'About',
    changePassword: 'Change Password',
    currentPassword: 'Current Password',
    newPassword: 'New Password',
    confirmNewPassword: 'Confirm New Password',
    passwordChanged: 'Password changed successfully',
    chineseLanguage: 'Chinese',
    englishLanguage: 'English',
    lightTheme: 'Light Theme',
    darkTheme: 'Dark Theme',
    systemTheme: 'System Theme',
    // API related settings
    apiSettings: 'API Settings',
    apiBaseUrl: 'API Base URL',
    apiHelperText: 'Please enter the XUGOU backend API server address',
    apiUrlSaved: 'API address saved. Please restart the app for changes to take effect.',
    apiUrlSaveFailed: 'Failed to save API address',
  },
  
  // Dashboard
  dashboard: {
    title: 'Dashboard',
    summary: 'Summary',
    totalMonitors: 'Total Monitors',
    activeMonitors: 'Active Monitors',
    downMonitors: 'Down Monitors',
    totalAgents: 'Total Agents',
    onlineAgents: 'Online Agents',
    offlineAgents: 'Offline Agents',
    uptime: 'Uptime',
    responseTime: 'Avg Response Time',
    recentIncidents: 'Recent Incidents',
    noIncidents: 'No incidents',
    quickActions: 'Quick Actions',
    addMonitor: 'Add Monitor',
    addAgent: 'Add Agent',
    checkAll: 'Check All',
    viewStatus: 'View Status Page',
  },
  
  // Setup
  setup: {
    welcome: 'Welcome to XUGOU Monitor',
    firstTimeSetup: 'First-time Setup',
    continue: 'Continue',
  },
}; 